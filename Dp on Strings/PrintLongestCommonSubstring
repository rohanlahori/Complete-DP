#include<bits/stdc++.h>
int lcs(string s, string t)
{
       string s1=t;
       int n=s.length();
       int m=s1.length();
        vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
        for(int i=0;i<=n;i++)
        {
            dp[i][0]=0;
        }
        for(int i=0;i<=m;i++)
        {
            dp[0][i]=0;
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(s[i-1]==s1[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
                }
            }
        }
        int ptr=n,ptr1=m;
        string ans="";
        while(ans.length()!=dp[n][m])
        {
            if(s[ptr-1]==s1[ptr1-1])
            {
                ans+=s[ptr-1];
                ptr--;
                ptr1--;
            }
            else{
                if(dp[n-1][m]>dp[n][m-1])
                {
                    ptr--;
                }
                else{
                    ptr1--;
                }
            }
        }
        reverse(ans.begin(),ans.end());
        cout<<ans<<"\n";
}
